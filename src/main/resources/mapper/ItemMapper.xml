<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="katachi.spring.execise.repository.ItemMapper">
	<!-- 作業一覧取得 -->

	<select id="getItem" resultType="Item">
		SELECT
		subsc_table.id AS id,			<!-- サービスID -->
		subsc_table.user_id AS userId,		<!--ユーザID -->
		subsc_table.serv_name AS servName,	<!--サービス名 -->
		subsc_table.fee AS fee,				<!--料金// -->
		subsc_table.pay_interval AS pay,	<!--月払いなら１，年払いなら２ -->
		subsc_table.debit_month AS month,	<!--支払い月　月額制ならNULL -->
		subsc_table.debit_day AS day,		<!--支払日 -->
		subsc_table.update_date_time AS registDay,
		<!--次回引き落としまでの日数計算 -->
		CASE
		<!-- //月額制// -->
		WHEN subsc_table.pay_interval = 1 THEN
		CASE
		WHEN MONTH(CURDATE()) = 12 THEN
		DATEDIFF(
		DATE(CONCAT(YEAR(CURDATE()) + 1, '-01-', subsc_table.debit_day)),
		CURDATE()
		)
		ELSE
		CASE
		WHEN DAY(CURDATE()) &lt; subsc_table.debit_day THEN
		CASE
		WHEN subsc_table.debit_day &gt; DAY(LAST_DAY(CONCAT(YEAR(CURDATE()), '-',
		MONTH(CURDATE()), '-01'))) THEN
		DATEDIFF(
		LAST_DAY(CONCAT(YEAR(CURDATE()), '-', MONTH(CURDATE()), '-01')),
		CURDATE()
		)
		ELSE
		DATEDIFF(
		DATE(CONCAT(YEAR(CURDATE()), '-', MONTH(CURDATE()), '-', subsc_table.debit_day)),
		CURDATE()
		)
		END
		ELSE

		DATEDIFF(
		DATE(CONCAT(YEAR(CURDATE()), '-', MONTH(CURDATE()) + 1, '-', subsc_table.debit_day)),
		CURDATE()
		)
		END
		END
		<!-- //年額制// -->
		WHEN subsc_table.pay_interval = 2 THEN
		CASE
		WHEN MONTH(CURDATE()) &lt; subsc_table.debit_month OR (MONTH(CURDATE()) =
		subsc_table.debit_month AND DAY(CURDATE()) &lt;=
		subsc_table.debit_day) THEN
		DATEDIFF(
		DATE(CONCAT(YEAR(CURDATE()), '-', subsc_table.debit_month, '-', subsc_table.debit_day)),
		CURDATE()
		)
		ELSE
		DATEDIFF(
		DATE(CONCAT(YEAR(CURDATE()) + 1, '-', subsc_table.debit_month, '-', subsc_table.debit_day)),
		CURDATE()
		)
		END
		ELSE
		null
		END AS untilDays	<!--次回引き落としまでの日数 -->
		FROM subsc_table

		left join users_table
		on subsc_table.user_id = users_table.user_id
		WHERE users_table.user_id= #{userId}
		;
	</select>
	
	<!--引落日までの日数更新（一覧画面を表示するたびに）  -->
	<update id="updateUntilDays">
		update subsc_table 
		set until_days =#{untilDays}
		where id = #{Id}
	</update>


	<!--サービス項目の登録 -->
	<insert id="registItem">
		insert into subsc_table(
		user_id,
		serv_name,
		fee,
		pay_interval,
		debit_month,
		debit_day)

		values(
		#{userId},
		#{servName},
		#{fee},
		#{pay},
		#{month},
		#{day}
		)
		;
	</insert>

	<!--編集・削除項目の取得 -->
	<select id="findItem">
		select
		id,
		user_id AS userId,		<!--ユーザID -->
		serv_name AS servName,	<!--サービス名 -->
		fee AS fee,				<!--料金// -->
		pay_interval AS pay,	<!--月払いなら１，年払いなら２ -->
		debit_month AS month,	<!--支払い月　月額制ならNULL -->
		debit_day AS day 		<!--支払日 -->
		from subsc_table
		where
		id = #{id}
		;
	</select>

<!--	項目編集の実行-->
	<update id="updateItem">
		update
		subsc_table 
		set 
		serv_name=#{servName},
		fee=#{fee},
		pay_interval=#{pay},
		debit_month=#{month},
		debit_day=#{day}
		where
		id=#{id}
		;
	</update>

	<!--サービス項目の削除実行 -->
	<delete id="deleteItem">
		delete from
		subsc_table
		where
		id = #{id}
		;
	</delete>

</mapper>

